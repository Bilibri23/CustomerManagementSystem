name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
      branches:
        - master
      paths:
        - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer

        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
        # Install Elastic Beanstalk CLI
      - name: Install EB CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip
          pip3 install --user awsebcli
          echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV
          source $GITHUB_ENV

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT}}
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
#      - name: Update Dockerrun.aws.json api image tag with new build number
#        run: |
#          echo "Dockerrun.aws.json before updating tag"
#          cat ../Dockerrun.aws.json
#          sed -i -E 's_(bilibri23/brian-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
#          echo "Dockerrun.aws.json after updating tag"
#          cat ../Dockerrun.aws.json

          # Deploy using docker-compose.yml
      - name: Deploy to Elastic Beanstalk
        run: |
            eb init -p docker ${{ secrets.EB_APPLICATION_NAME }} --region ${{ secrets.EB_REGION }}
            eb use ${{ secrets.EB_ENVIRONMENT_NAME }}
            eb deploy --staged --region ${{ secrets.EB_REGION }}

      - name: Commit and push docker-compose.yml
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ./docker-compose.yml
          git commit -m "Update docker-compose.yml with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push
